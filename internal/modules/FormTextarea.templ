package modules

import "github.com/vague2k/blackheaven/internal/components/form"
import "fmt"
import "github.com/vague2k/blackheaven/internal/components/icon"
import "github.com/vague2k/blackheaven/internal/components/textarea"
import "github.com/vague2k/blackheaven/utils"

type FormTextareaProps struct {
	FormID         string
	Name           string
	Description    string
	Label          string
	Class          string
	HasError       bool
	Required       bool
	TextareaProps  textarea.Props
	FormLabelProps form.LabelProps
	FormDescProps  form.DescriptionProps
	Attributes     templ.Attributes
}

templ FormTextarea(props ...FormTextareaProps) {
	{{ var p FormTextareaProps }}
	if len(props) > 0 {
		{{ p = props[0] }}
	}
	@form.Item(form.ItemProps{
		ID:         fmt.Sprintf("%s-%s-element-container", p.FormID, p.Name),
		Class:      p.Class,
		Attributes: p.Attributes,
	}) {
		@form.Label(form.LabelProps{
			ID:            fmt.Sprintf("%s-%s-input-label", p.FormID, p.Name),
			Class:         p.FormLabelProps.Class,
			Attributes:    p.FormLabelProps.Attributes,
			For:           p.FormID,
			DisabledClass: p.FormLabelProps.DisabledClass,
		}) {
			<p class="flex">
				<span>{ p.Label }</span>
				if p.Required {
					<span class="flex ml-1 text-destructive text-xl">
						@icon.Circle(icon.Props{
							Size: 6,
							Fill: "red",
						})
					</span>
				}
			</p>
		}
		@textarea.Textarea(textarea.Props{
			ID:   utils.ID(p.FormID, p.Name, "textarea", "self"),
			Name: p.Name,
			Class: utils.TwMerge(
				"focus:outline focus:outline-ring focus:outline-offset-1",
				utils.If(p.HasError, "border-destructive focus:outline-destructive"),
				p.TextareaProps.Class,
			),
			Placeholder: p.TextareaProps.Placeholder,
			Required:    p.Required,
			AutoResize:  p.TextareaProps.AutoResize,
			Rows:        p.TextareaProps.Rows,
			Value:       p.TextareaProps.Value,
			Disabled:    p.TextareaProps.Disabled,
			Attributes:  p.TextareaProps.Attributes,
		})
		@form.Description(form.DescriptionProps{
			ID: utils.ID(p.FormID, p.Name, "textarea", "desc"),
			Class: utils.TwMerge(
				"text-xs mt-2",
				utils.If(p.HasError, "text-destructive"),
				p.FormDescProps.Class),
			Attributes: p.FormDescProps.Attributes,
		}) {
			{ p.Description }
		}
	}
}
