package modules

import "github.com/vague2k/blackheaven/internal/components/input"
import "github.com/vague2k/blackheaven/internal/components/form"
import "fmt"
import "github.com/vague2k/blackheaven/utils"

type FormInputProps struct {
	FormID         string
	Name           string
	Description    string
	Label          string
	Class          string
	InputProps     input.Props
	FormLabelProps form.LabelProps
	FormDescProps  form.DescriptionProps
}

templ FormInput(props ...FormInputProps) {
	{{ var p FormInputProps }}
	if len(props) > 0 {
		{{ p = props[0] }}
	}
	<div id={ fmt.Sprintf("%s-%s-element-container", p.FormID, p.Name) }>
		@form.Label(form.LabelProps{
			ID:            fmt.Sprintf("%s-%s-input-label", p.FormID, p.Name),
			Class:         p.FormLabelProps.Class,
			Attributes:    p.FormLabelProps.Attributes,
			For:           p.FormID,
			DisabledClass: p.FormLabelProps.DisabledClass,
		}) {
			{ p.Label }
		}
		@input.Input(input.Props{
			ID:               fmt.Sprintf("%s-%s-input", p.FormID, p.Name),
			Class:            utils.TwMerge("rounded-sm", p.InputProps.Class),
			Attributes:       p.InputProps.Attributes,
			Name:             p.Name,
			Type:             p.InputProps.Type,
			Placeholder:      p.InputProps.Placeholder,
			Value:            p.InputProps.Value,
			Disabled:         p.InputProps.Disabled,
			Readonly:         p.InputProps.Readonly,
			Required:         p.InputProps.Required,
			FileAccept:       p.InputProps.FileAccept,
			HasError:         p.InputProps.HasError,
			NoTogglePassword: p.InputProps.NoTogglePassword,
		})
		@form.Description(form.DescriptionProps{
			ID:         fmt.Sprintf("%s-%s-input-desc", p.FormID, p.Name),
			Class:      utils.TwMerge("text-xs mt-2", p.FormDescProps.Class),
			Value:      p.FormDescProps.Value,
			Attributes: p.FormDescProps.Attributes,
		}) {
			{ p.Description }
		}
	</div>
}
