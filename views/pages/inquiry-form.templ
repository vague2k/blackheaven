package pages

import (
	"github.com/vague2k/blackheaven/views/components/button"
	"github.com/vague2k/blackheaven/views/components/input"
	"github.com/vague2k/blackheaven/views/layouts"
	"github.com/vague2k/blackheaven/views/modules"
	"github.com/vague2k/blackheaven/views/modules/form"
	"github.com/vague2k/blackheaven/views/components/icon"
	"fmt"
)

const FormID = "inquiry-form"

templ Inquiry() {
	@layouts.BaseLayout() {
		<div class="flex justify-center items-center h-screen">
			<div class="justify-center items-center min-w-lg">
				<!-- novalidate attr on this form since we handle validation ourselves -->
				<form
					novalidate
					hx-post="/create-inquiry"
					hx-target="#inquiry-form-toast"
					hx-disabled-elt="#inquiry-form-submit-button"
					class="space-y-5"
				>
					<div class="flex gap-x-3">
						@form.Selectbox(form.SelectboxProps{
							Name:        "topic",
							Class:       "w-1/2",
							FormID:      FormID,
							Label:       "Inquiry Topic",
							Required:    true,
							Description: "What kind of topic is it?",
							Placeholder: "Select a topic",
							Options:     []string{"general", "order", "submission"},
						})
						@form.Input(form.InputProps{
							FormID:      FormID,
							Name:        "email",
							Class:       "w-1/2",
							Label:       "Email",
							Description: "Enter a valid email",
							Required:    true,
							Placeholder: "johnsmith@email.com",
						})
					</div>
					<div class="flex gap-x-3">
						@form.Input(form.InputProps{
							Class:       "w-1/2",
							FormID:      FormID,
							Name:        "name",
							Label:       "Name",
							Type:        input.TypeText,
							Placeholder: "John Smith",
						})
						@form.Input(form.InputProps{
							Class:       "w-1/2",
							FormID:      FormID,
							Name:        "order",
							Label:       "Order #",
							Description: "Required if your topic is about an order",
							Type:        input.TypeText,
							Placeholder: "Order # here",
						})
					</div>
					@form.Input(form.InputProps{
						FormID:      FormID,
						Name:        "subject",
						Label:       "Subject",
						Type:        input.TypeText,
						Placeholder: "Summarize your message",
					})
					@form.Textarea(form.TextareaProps{
						FormID:      FormID,
						Name:        "content",
						Label:       "Message",
						Description: "The message box will expand as you type",
						Required:    true,
						AutoResize:  true,
						Placeholder: "What do you have to say...",
					})
					<div class="flex mb-4 items-center gap-x-3">
						<span class="text-sm font-regular text-muted-foreground">
							Required fields are marked by
						</span>
						<span class="flex ml-[-0.2rem] mb-2 text-destructive text-xl">
							@icon.Circle(icon.Props{
								Size: 6,
								Fill: "red",
							})
						</span>
					</div>
					<div class="flex justify-between">
						@button.Button(button.Props{
							ID:   fmt.Sprintf("%s-submit-button", FormID),
							Type: button.TypeSubmit,
							Attributes: templ.Attributes{
								"hx-indicator": "#spinner",
							},
						}) {
							<span id="spinner" class="htmx-indicator">
								@icon.LoaderCircle(icon.Props{
									Class: "animate-spin",
								})
							</span>
							Submit
						}
						@modules.ThemeSwitcher()
					</div>
				</form>
			</div>
			<div id="inquiry-form-toast"></div>
		</div>
		@modules.HandleHTMXSwaps()
	}
}
